apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: automate-metashape-workflow-
spec:
  serviceAccountName: argo
  entrypoint: main
  volumes:
  - name: data
    persistentVolumeClaim:
      claimName: ofo-share-nfs-pvc
  - name: results
    persistentVolumeClaim:
      claimName: argo-output-nfs-pvc

  templates:
    - name: main
      steps:
        - - name: determine-datasets
            template: determine-datasets
        - - name: log-datasets-to-db
            template: log-datasets-to-db
            arguments:
              parameters:
                - name: datasets
                  value: "{{steps.determine-datasets.outputs.result}}"
        - - name: process-datasets
            template: process-dataset-workflow
            arguments:
              parameters:
                - name: dataset-name
                  value: "{{item}}"
            withParam: "{{steps.determine-datasets.outputs.result}}"
    
    - name: determine-datasets
      script:
        image: python:3.9
        volumeMounts:
        - name: data
          mountPath: /data
        - name: results
          mountPath: /results
          subPath: "{{workflow.parameters.DATASET_LIST}}"
        command: ["python3"]
        source: |
          import json
          import sys
          with open("/data/argo-output/datasets.txt", "r") as f:
            json.dump([line.strip() for line in f], sys.stdout)

    - name: log-datasets-to-db
      inputs:
        parameters:
          - name: datasets
      container:
        image: ghcr.io/open-forest-observatory/ofo-argo-utils:latest
        command: ["python", "/app/db_logger.py"]
        args:
          - "log-initial"
          - "--workflow-id"
          - "{{workflow.name}}"
          - "--datasets-json"
          - "{{inputs.parameters.datasets}}"
        env:
          - name: DB_HOST
            value: "{{workflow.parameters.DB_HOST}}"
          - name: DB_NAME
            value: "{{workflow.parameters.DB_NAME}}"
          - name: DB_USER
            value: "{{workflow.parameters.DB_USER}}"
          - name: DB_PASSWORD
            value: "{{workflow.parameters.DB_PASSWORD}}"
            

    # Process dataset workflow with logging
    - name: process-dataset-workflow
      inputs:
        parameters:
          - name: dataset-name
      steps:
        - - name: log-start
            template: log-dataset-start
            arguments:
              parameters:
                - name: dataset-name
                  value: "{{inputs.parameters.dataset-name}}"
        - - name: run-processing
            template: run-automate-metashape
            arguments:
              parameters:
                - name: dataset-names
                  value: "{{inputs.parameters.dataset-name}}"
            continueOn:
              failed: true
        - - name: log-completion
            template: log-dataset-completion
            arguments:
              parameters:
                - name: dataset-name
                  value: "{{inputs.parameters.dataset-name}}"
                - name: success
                  value: "{{steps.run-processing.status}}"

    # Log dataset processing start
    - name: log-dataset-start
      inputs:
        parameters:
          - name: dataset-name
      container:
        image: ghcr.io/open-forest-observatory/ofo-argo-utils:latest
        command: ["python", "/app/db_logger.py"]
        args:
          - "log-start"
          - "--workflow-id"
          - "{{workflow.name}}"
          - "--dataset"
          - "{{inputs.parameters.dataset-name}}"
        env:
          - name: DB_HOST
            value: "{{workflow.parameters.DB_HOST}}"
          - name: DB_NAME
            value: "{{workflow.parameters.DB_NAME}}"
          - name: DB_USER
            value: "{{workflow.parameters.DB_USER}}"
          - name: DB_PASSWORD
            value: "{{workflow.parameters.DB_PASSWORD}}"
      
    # Log dataset processing completion
    - name: log-dataset-completion
      inputs:
        parameters:
          - name: dataset-name
          - name: success
      container:
        image: ghcr.io/open-forest-observatory/ofo-argo-utils:latest
        command: ["python", "/app/db_logger.py"]
        args:
          - "log-completion"
          - "--workflow-id"
          - "{{workflow.name}}"
          - "--dataset"
          - "{{inputs.parameters.dataset-name}}"
          - "--success"
          - "{{inputs.parameters.success}}"
        env:
          - name: DB_HOST
            value: "{{workflow.parameters.DB_HOST}}"
          - name: DB_NAME
            value: "{{workflow.parameters.DB_NAME}}"
          - name: DB_USER
            value: "{{workflow.parameters.DB_USER}}"
          - name: DB_PASSWORD
            value: "{{workflow.parameters.DB_PASSWORD}}"
    
    # Run automate-metashape container
    - name: run-automate-metashape
      inputs:
        parameters:
          - name: dataset-names
      container:
        image: ghcr.io/open-forest-observatory/automate-metashape
        volumeMounts:
        - name: data
          mountPath: /data
        - name: results
          mountPath: /results
          subPath: "{{workflow.parameters.RUN_FOLDER}}"
        command: ["python3", "/app/python/metashape_workflow.py"]
        args: 
          - "--photo-path"
          - "/data/{{inputs.parameters.dataset-names}}"
          - "--project-path"
          - "/results/project"
          - "--output-path"
          - "/results/output"
          - "--run-name"
          - "test-run-{{inputs.parameters.dataset-names}}-{{workflow.name}}"
        env:
          - name: AGISOFT_FLS
            value: "{{workflow.parameters.AGISOFT_FLS}}"